// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  username  String    @unique
  password  String
  type      UserType
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  albums  Album[]
  Profile Profile?

  @@map("users")
}

enum UserType {
  COMMON
  ARTIST
}

model Profile {
  id           Int      @id @default(autoincrement())
  profileImage String?  @map("profile_image")
  userId       String   @unique @map("user_id")
  user         User     @relation(fields: [userId], references: [id])
  bio          String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("profiles")
}

model Album {
  id             String    @id @default(uuid())
  userId         String    @map("user_id")
  user           User      @relation(fields: [userId], references: [id])
  name           String
  type           AlbumType
  albumPic       String    @map("album_pic")
  collaborations Json?     @db.JsonB
  releasedAt     DateTime? @map("released_at")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")

  @@map("albums")
}

enum AlbumType {
  EP
  SINGLE
  ALBUM
}
